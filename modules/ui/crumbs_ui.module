<?php
use Drupal\crumbs\PluginSystem\PluginType\ParentPluginType;
use Drupal\crumbs\PluginSystem\PluginType\TitlePluginType;
use Drupal\crumbs_ui\Controller\DebugController;
use Drupal\crumbs_ui\Form\CheckboxtreePluginForm;
use Drupal\crumbs_ui\Form\DisplaySettingsForm;
use Drupal\crumbs_ui\Form\EntityParentForm;

require __DIR__ . '/crumbs_ui.form.inc';
require __DIR__ . '/crumbs_ui.elements.inc';

/**
 * Implements hook_theme()
 *
 * @return array[]
 */
function crumbs_ui_theme() {
  return array(
    /** @see theme_crumbs_ui_element() */
    'crumbs_ui_element' => array('render element' => 'element'),
    // Replacement for theme('form_element') as element wrapper.
    /** @see theme_crumbs_ui_form_element() */
    'crumbs_ui_form_element' => array('render element' => 'element'),
    /** @see theme_crumbs_ui_inline_element() */
    'crumbs_ui_inline_element' => array('render element' => 'element'),
  );
}

/**
 * Implements hook_menu()
 *
 * @return array[]
 */
function crumbs_ui_menu() {
  $items = array();

  $items['admin/structure/crumbs'] = array(
    'weight' => -20,
    'title' => 'Crumbs',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      '_crumbs_ui_form',
      new CheckboxtreePluginForm(new ParentPluginType()),
    ),
    'access arguments' => array('administer crumbs'),
    # 'type' => MENU_LOCAL_TASK,
    'file' => 'crumbs_ui.form.inc',
  );

  $items['admin/structure/crumbs/plugins'] = array(
    'title' => 'Plugins',
    'access arguments' => array('administer crumbs'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/structure/crumbs/plugins/parent-finding'] = array(
    'title' => 'Parent-finding',
    'access arguments' => array('administer crumbs'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/structure/crumbs/plugins/title-finding'] = array(
    'title' => 'Title-finding',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      '_crumbs_ui_form',
      new CheckboxtreePluginForm(new TitlePluginType()),
    ),
    'access arguments' => array('administer crumbs'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'crumbs_ui.form.inc',
    'weight' => -8,
  );

  $items['admin/structure/crumbs/display'] = array(
    'title' => 'Display',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      '_crumbs_ui_form',
      new DisplaySettingsForm(),
    ),
    'access arguments' => array('administer crumbs'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'crumbs_ui.form.inc',
  );

  $items += _crumbs_ui_menu_entity_parent('admin/structure/crumbs/entity-parent');

  $items['admin/structure/crumbs/debug'] = array(
    'title' => 'Debug',
    'page callback' => '_crumbs_ui_page',
    'page arguments' => array(new DebugController()),
    'access arguments' => array('administer crumbs'),
    'file' => 'crumbs_ui.page.inc',
    'weight' => 20,
    'type' => MENU_LOCAL_TASK,
  );

  if (module_exists('devel')) {
    $items['admin/structure/crumbs/debug/plugins'] = array(
      'title' => 'Plugin results',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -10,
    );
    $items['admin/structure/crumbs/debug/devel'] = array(
      'title' => 'Devel',
      'page callback' => '_crumbs_debug_devel_page',
      'access callback' => '_crumbs_user_access_and',
      'access arguments' => array(array('administer crumbs', 'access devel information')),
      'file' => 'crumbs_ui.page.inc',
      'type' => MENU_LOCAL_TASK,
    );
  }

  return $items;
}

/**
 * Helper for crumbs_ui_menu()
 *
 * @param string $base
 *   Base path for entity parent pages.
 */
function _crumbs_ui_menu_entity_parent($base) {

  $items[$base] = array(
    'title' => 'Entity parent',
    'weight' => 10,
    'type' => MENU_LOCAL_TASK,
  );

  foreach (array(
    // @todo Use dynamic entity types from hook_crumbs_plugins() or entity info.
    'node' => 'Node',
    'taxonomy_term' => module_exists('taxonomy') ? 'Taxonomy' : FALSE,
    'user' => 'User',
  ) as $entity_type => $title) {
    if (FALSE !== $title) {
      $entity_slug = str_replace('_', '-', $entity_type);
      $items[$base . '/' . $entity_slug] = array(
        'title' => $title,
        'page callback' => 'drupal_get_form',
        'page arguments' => array(
          '_crumbs_ui_form',
          new EntityParentForm($entity_type),
        ),
        'access arguments' => array('administer crumbs'),
        'file' => 'crumbs_ui.form.inc',
        'type' => MENU_LOCAL_TASK,
      );
    }
  }

  $items[$base] += $items[$base . '/node'];

  $items[$base . '/node'] = array(
    'title' => 'Node',
    'weight' => -10,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}


//                                                                Some callbacks
// -----------------------------------------------------------------------------

/**
 * Element validate callback for separator string.
 *
 * @param array $element
 * @param array $form_state
 */
function _crumbs_ui_validate_separator_xss($element, $form_state) {
  $string = $element['#value'];
  $filtered = filter_xss_admin($string);
  if ($string !== $filtered) {
    form_error($element, t('%name contains unsafe HTML. Maybe you meant %safe instead.', array(
      '%name' => $element['#title'],
      '!safe' => '"<code>' . check_plain($filtered) . '</code>"',
    )));
  }
}
